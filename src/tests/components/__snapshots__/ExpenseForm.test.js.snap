// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseForm with error for invalid submission 1`] = `
<div
  className="expenseFormWrapper"
>
  <form
    onSubmit={[Function]}
  >
    <section>
      <label
        htmlFor="txtDescription"
      >
        Description
      </label>
      <input
        autoFocus={true}
        name="txtDescription"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <section>
      <label
        htmlFor="txtAmount"
      >
        Amount
      </label>
      <input
        name="txtAmount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <section>
      <label
        htmlFor="date"
      >
        Date
      </label>
      <SingleDatePicker
        anchorDirection="right"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-01T00:00:00.000Z"}
        daySize={39}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPrev={null}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month",
            "jumpToPrevMonth": "Move backward to switch to the previous month",
            "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
            select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
            "moveFocusByOneMonth": "Switch months",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
            "openThisPanel": "Open this panel",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field",
            "selectFocusedDate": "Select the date in focus",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        renderCalendarInfo={null}
        renderDay={null}
        renderMonth={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </section>
    <section>
      <label
        htmlFor="txtNote"
      >
        Note
      </label>
      <input
        name="txtNote"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <button
      id="btnSubmit"
      type="submit"
    >
      Submit this expense
    </button>
  </form>
</div>
`;

exports[`should render ExpenseForm with error for invalid submission 2`] = `
<div
  className="expenseFormWrapper"
>
  <p
    className="pError"
  >
    Please complete the form with valid values.
  </p>
  <form
    onSubmit={[Function]}
  >
    <section>
      <label
        htmlFor="txtDescription"
      >
        Description
      </label>
      <input
        autoFocus={true}
        name="txtDescription"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <section>
      <label
        htmlFor="txtAmount"
      >
        Amount
      </label>
      <input
        name="txtAmount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <section>
      <label
        htmlFor="date"
      >
        Date
      </label>
      <SingleDatePicker
        anchorDirection="right"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-01T00:00:00.000Z"}
        daySize={39}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPrev={null}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month",
            "jumpToPrevMonth": "Move backward to switch to the previous month",
            "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
            select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
            "moveFocusByOneMonth": "Switch months",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
            "openThisPanel": "Open this panel",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field",
            "selectFocusedDate": "Select the date in focus",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        renderCalendarInfo={null}
        renderDay={null}
        renderMonth={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </section>
    <section>
      <label
        htmlFor="txtNote"
      >
        Note
      </label>
      <input
        name="txtNote"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <button
      id="btnSubmit"
      type="submit"
    >
      Submit this expense
    </button>
  </form>
</div>
`;

exports[`should render ExpenseForm with example data 1`] = `
<div
  className="expenseFormWrapper"
>
  <form
    onSubmit={[Function]}
  >
    <section>
      <label
        htmlFor="txtDescription"
      >
        Description
      </label>
      <input
        autoFocus={true}
        name="txtDescription"
        onChange={[Function]}
        type="text"
        value="USB stick"
      />
    </section>
    <section>
      <label
        htmlFor="txtAmount"
      >
        Amount
      </label>
      <input
        name="txtAmount"
        onChange={[Function]}
        type="text"
        value="8.99"
      />
    </section>
    <section>
      <label
        htmlFor="date"
      >
        Date
      </label>
      <SingleDatePicker
        anchorDirection="right"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-12T13:46:40.000Z"}
        daySize={39}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPrev={null}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month",
            "jumpToPrevMonth": "Move backward to switch to the previous month",
            "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
            select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
            "moveFocusByOneMonth": "Switch months",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
            "openThisPanel": "Open this panel",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field",
            "selectFocusedDate": "Select the date in focus",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        renderCalendarInfo={null}
        renderDay={null}
        renderMonth={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </section>
    <section>
      <label
        htmlFor="txtNote"
      >
        Note
      </label>
      <input
        name="txtNote"
        onChange={[Function]}
        type="text"
        value="16GB"
      />
    </section>
    <button
      id="btnSubmit"
      type="submit"
    >
      Submit this expense
    </button>
  </form>
</div>
`;

exports[`should render default ExpenseForm 1`] = `
<div
  className="expenseFormWrapper"
>
  <form
    onSubmit={[Function]}
  >
    <section>
      <label
        htmlFor="txtDescription"
      >
        Description
      </label>
      <input
        autoFocus={true}
        name="txtDescription"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <section>
      <label
        htmlFor="txtAmount"
      >
        Amount
      </label>
      <input
        name="txtAmount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <section>
      <label
        htmlFor="date"
      >
        Date
      </label>
      <SingleDatePicker
        anchorDirection="right"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-01T00:00:00.000Z"}
        daySize={39}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPrev={null}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month",
            "jumpToPrevMonth": "Move backward to switch to the previous month",
            "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
            select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
            "moveFocusByOneMonth": "Switch months",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
            "openThisPanel": "Open this panel",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field",
            "selectFocusedDate": "Select the date in focus",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        renderCalendarInfo={null}
        renderDay={null}
        renderMonth={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </section>
    <section>
      <label
        htmlFor="txtNote"
      >
        Note
      </label>
      <input
        name="txtNote"
        onChange={[Function]}
        type="text"
        value=""
      />
    </section>
    <button
      id="btnSubmit"
      type="submit"
    >
      Submit this expense
    </button>
  </form>
</div>
`;
